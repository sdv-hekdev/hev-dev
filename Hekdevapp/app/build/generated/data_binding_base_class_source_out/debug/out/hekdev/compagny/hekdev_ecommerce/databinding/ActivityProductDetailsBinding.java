// Generated by view binder compiler. Do not edit!
package hekdev.compagny.hekdev_ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import hekdev.compagny.hekdev_ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddToCart;

  @NonNull
  public final Button btnGoToCart;

  @NonNull
  public final Button btnRate;

  @NonNull
  public final ImageView ivProductDetailImage;

  @NonNull
  public final LinearLayout llProductDetailsQuantity;

  @NonNull
  public final LinearLayout llProductDetailsTitlePrice;

  @NonNull
  public final LinearLayout llRating;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RatingBar ratingTotalBar;

  @NonNull
  public final Toolbar toolbarProductDetailsActivity;

  @NonNull
  public final TextView tvProductDetailsDescription;

  @NonNull
  public final TextView tvProductDetailsLabel;

  @NonNull
  public final TextView tvProductDetailsPrice;

  @NonNull
  public final TextView tvProductDetailsQuantity;

  @NonNull
  public final TextView tvProductDetailsStockQuantity;

  @NonNull
  public final TextView tvProductDetailsTitle;

  @NonNull
  public final TextView tvTitle;

  private ActivityProductDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAddToCart, @NonNull Button btnGoToCart, @NonNull Button btnRate,
      @NonNull ImageView ivProductDetailImage, @NonNull LinearLayout llProductDetailsQuantity,
      @NonNull LinearLayout llProductDetailsTitlePrice, @NonNull LinearLayout llRating,
      @NonNull RatingBar ratingBar, @NonNull RatingBar ratingTotalBar,
      @NonNull Toolbar toolbarProductDetailsActivity, @NonNull TextView tvProductDetailsDescription,
      @NonNull TextView tvProductDetailsLabel, @NonNull TextView tvProductDetailsPrice,
      @NonNull TextView tvProductDetailsQuantity, @NonNull TextView tvProductDetailsStockQuantity,
      @NonNull TextView tvProductDetailsTitle, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnAddToCart = btnAddToCart;
    this.btnGoToCart = btnGoToCart;
    this.btnRate = btnRate;
    this.ivProductDetailImage = ivProductDetailImage;
    this.llProductDetailsQuantity = llProductDetailsQuantity;
    this.llProductDetailsTitlePrice = llProductDetailsTitlePrice;
    this.llRating = llRating;
    this.ratingBar = ratingBar;
    this.ratingTotalBar = ratingTotalBar;
    this.toolbarProductDetailsActivity = toolbarProductDetailsActivity;
    this.tvProductDetailsDescription = tvProductDetailsDescription;
    this.tvProductDetailsLabel = tvProductDetailsLabel;
    this.tvProductDetailsPrice = tvProductDetailsPrice;
    this.tvProductDetailsQuantity = tvProductDetailsQuantity;
    this.tvProductDetailsStockQuantity = tvProductDetailsStockQuantity;
    this.tvProductDetailsTitle = tvProductDetailsTitle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_to_cart;
      Button btnAddToCart = ViewBindings.findChildViewById(rootView, id);
      if (btnAddToCart == null) {
        break missingId;
      }

      id = R.id.btn_go_to_cart;
      Button btnGoToCart = ViewBindings.findChildViewById(rootView, id);
      if (btnGoToCart == null) {
        break missingId;
      }

      id = R.id.btn_rate;
      Button btnRate = ViewBindings.findChildViewById(rootView, id);
      if (btnRate == null) {
        break missingId;
      }

      id = R.id.iv_product_detail_image;
      ImageView ivProductDetailImage = ViewBindings.findChildViewById(rootView, id);
      if (ivProductDetailImage == null) {
        break missingId;
      }

      id = R.id.ll_product_details_quantity;
      LinearLayout llProductDetailsQuantity = ViewBindings.findChildViewById(rootView, id);
      if (llProductDetailsQuantity == null) {
        break missingId;
      }

      id = R.id.ll_product_details_title_price;
      LinearLayout llProductDetailsTitlePrice = ViewBindings.findChildViewById(rootView, id);
      if (llProductDetailsTitlePrice == null) {
        break missingId;
      }

      id = R.id.ll_rating;
      LinearLayout llRating = ViewBindings.findChildViewById(rootView, id);
      if (llRating == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.ratingTotalBar;
      RatingBar ratingTotalBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingTotalBar == null) {
        break missingId;
      }

      id = R.id.toolbar_product_details_activity;
      Toolbar toolbarProductDetailsActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarProductDetailsActivity == null) {
        break missingId;
      }

      id = R.id.tv_product_details_description;
      TextView tvProductDetailsDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetailsDescription == null) {
        break missingId;
      }

      id = R.id.tv_product_details_label;
      TextView tvProductDetailsLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetailsLabel == null) {
        break missingId;
      }

      id = R.id.tv_product_details_price;
      TextView tvProductDetailsPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetailsPrice == null) {
        break missingId;
      }

      id = R.id.tv_product_details_quantity;
      TextView tvProductDetailsQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetailsQuantity == null) {
        break missingId;
      }

      id = R.id.tv_product_details_stock_quantity;
      TextView tvProductDetailsStockQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetailsStockQuantity == null) {
        break missingId;
      }

      id = R.id.tv_product_details_title;
      TextView tvProductDetailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetailsTitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityProductDetailsBinding((ConstraintLayout) rootView, btnAddToCart,
          btnGoToCart, btnRate, ivProductDetailImage, llProductDetailsQuantity,
          llProductDetailsTitlePrice, llRating, ratingBar, ratingTotalBar,
          toolbarProductDetailsActivity, tvProductDetailsDescription, tvProductDetailsLabel,
          tvProductDetailsPrice, tvProductDetailsQuantity, tvProductDetailsStockQuantity,
          tvProductDetailsTitle, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
