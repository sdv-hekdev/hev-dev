// Generated by view binder compiler. Do not edit!
package hekdev.compagny.hekdev_ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import hekdev.compagny.hekdev_ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashboardListLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivDashboardItemImage;

  @NonNull
  public final LinearLayout llDashboardItemDetails;

  @NonNull
  public final TextView tvDashboardItemPrice;

  @NonNull
  public final TextView tvDashboardItemTitle;

  @NonNull
  public final View viewDivider;

  private DashboardListLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView ivDashboardItemImage, @NonNull LinearLayout llDashboardItemDetails,
      @NonNull TextView tvDashboardItemPrice, @NonNull TextView tvDashboardItemTitle,
      @NonNull View viewDivider) {
    this.rootView = rootView;
    this.ivDashboardItemImage = ivDashboardItemImage;
    this.llDashboardItemDetails = llDashboardItemDetails;
    this.tvDashboardItemPrice = tvDashboardItemPrice;
    this.tvDashboardItemTitle = tvDashboardItemTitle;
    this.viewDivider = viewDivider;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardListLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardListLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard_list_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardListLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_dashboard_item_image;
      ImageView ivDashboardItemImage = ViewBindings.findChildViewById(rootView, id);
      if (ivDashboardItemImage == null) {
        break missingId;
      }

      id = R.id.ll_dashboard_item_details;
      LinearLayout llDashboardItemDetails = ViewBindings.findChildViewById(rootView, id);
      if (llDashboardItemDetails == null) {
        break missingId;
      }

      id = R.id.tv_dashboard_item_price;
      TextView tvDashboardItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvDashboardItemPrice == null) {
        break missingId;
      }

      id = R.id.tv_dashboard_item_title;
      TextView tvDashboardItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDashboardItemTitle == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      return new DashboardListLayoutBinding((RelativeLayout) rootView, ivDashboardItemImage,
          llDashboardItemDetails, tvDashboardItemPrice, tvDashboardItemTitle, viewDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
