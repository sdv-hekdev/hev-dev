// Generated by view binder compiler. Do not edit!
package hekdev.compagny.hekdev_ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import hekdev.compagny.hekdev_ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatCheckBox checkbox;

  @NonNull
  public final LinearLayout checkboxTerm;

  @NonNull
  public final TextInputLayout inputConfirmPassword;

  @NonNull
  public final TextInputLayout inputEmail;

  @NonNull
  public final TextInputLayout inputFirstName;

  @NonNull
  public final TextInputLayout inputName;

  @NonNull
  public final TextInputLayout inputPassword;

  @NonNull
  public final EditText logConfirmPassword;

  @NonNull
  public final EditText logEmail;

  @NonNull
  public final EditText logFirstName;

  @NonNull
  public final EditText logName;

  @NonNull
  public final EditText logPassword;

  @NonNull
  public final TextView noAccount;

  @NonNull
  public final TextView signIn;

  @NonNull
  public final Button signUpButton;

  @NonNull
  public final TextView signUpTitle;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatCheckBox checkbox, @NonNull LinearLayout checkboxTerm,
      @NonNull TextInputLayout inputConfirmPassword, @NonNull TextInputLayout inputEmail,
      @NonNull TextInputLayout inputFirstName, @NonNull TextInputLayout inputName,
      @NonNull TextInputLayout inputPassword, @NonNull EditText logConfirmPassword,
      @NonNull EditText logEmail, @NonNull EditText logFirstName, @NonNull EditText logName,
      @NonNull EditText logPassword, @NonNull TextView noAccount, @NonNull TextView signIn,
      @NonNull Button signUpButton, @NonNull TextView signUpTitle) {
    this.rootView = rootView;
    this.checkbox = checkbox;
    this.checkboxTerm = checkboxTerm;
    this.inputConfirmPassword = inputConfirmPassword;
    this.inputEmail = inputEmail;
    this.inputFirstName = inputFirstName;
    this.inputName = inputName;
    this.inputPassword = inputPassword;
    this.logConfirmPassword = logConfirmPassword;
    this.logEmail = logEmail;
    this.logFirstName = logFirstName;
    this.logName = logName;
    this.logPassword = logPassword;
    this.noAccount = noAccount;
    this.signIn = signIn;
    this.signUpButton = signUpButton;
    this.signUpTitle = signUpTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkbox;
      AppCompatCheckBox checkbox = ViewBindings.findChildViewById(rootView, id);
      if (checkbox == null) {
        break missingId;
      }

      id = R.id.checkbox_term;
      LinearLayout checkboxTerm = ViewBindings.findChildViewById(rootView, id);
      if (checkboxTerm == null) {
        break missingId;
      }

      id = R.id.input_confirm_password;
      TextInputLayout inputConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmPassword == null) {
        break missingId;
      }

      id = R.id.input_email;
      TextInputLayout inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.input_firstName;
      TextInputLayout inputFirstName = ViewBindings.findChildViewById(rootView, id);
      if (inputFirstName == null) {
        break missingId;
      }

      id = R.id.input_name;
      TextInputLayout inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.input_password;
      TextInputLayout inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.log_confirm_password;
      EditText logConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (logConfirmPassword == null) {
        break missingId;
      }

      id = R.id.log_email;
      EditText logEmail = ViewBindings.findChildViewById(rootView, id);
      if (logEmail == null) {
        break missingId;
      }

      id = R.id.log_firstName;
      EditText logFirstName = ViewBindings.findChildViewById(rootView, id);
      if (logFirstName == null) {
        break missingId;
      }

      id = R.id.log_name;
      EditText logName = ViewBindings.findChildViewById(rootView, id);
      if (logName == null) {
        break missingId;
      }

      id = R.id.log_password;
      EditText logPassword = ViewBindings.findChildViewById(rootView, id);
      if (logPassword == null) {
        break missingId;
      }

      id = R.id.no_account;
      TextView noAccount = ViewBindings.findChildViewById(rootView, id);
      if (noAccount == null) {
        break missingId;
      }

      id = R.id.sign_in;
      TextView signIn = ViewBindings.findChildViewById(rootView, id);
      if (signIn == null) {
        break missingId;
      }

      id = R.id.sign_up_button;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.sign_up_title;
      TextView signUpTitle = ViewBindings.findChildViewById(rootView, id);
      if (signUpTitle == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, checkbox, checkboxTerm,
          inputConfirmPassword, inputEmail, inputFirstName, inputName, inputPassword,
          logConfirmPassword, logEmail, logFirstName, logName, logPassword, noAccount, signIn,
          signUpButton, signUpTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
