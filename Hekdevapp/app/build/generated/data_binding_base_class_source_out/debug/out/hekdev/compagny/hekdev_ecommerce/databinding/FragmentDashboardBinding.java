// Generated by view binder compiler. Do not edit!
package hekdev.compagny.hekdev_ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import hekdev.compagny.hekdev_ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivLogoDashboard;

  @NonNull
  public final RecyclerView rvDashboardItems;

  @NonNull
  public final TextView tvNoDashboardItemsFound;

  private FragmentDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivLogoDashboard, @NonNull RecyclerView rvDashboardItems,
      @NonNull TextView tvNoDashboardItemsFound) {
    this.rootView = rootView;
    this.ivLogoDashboard = ivLogoDashboard;
    this.rvDashboardItems = rvDashboardItems;
    this.tvNoDashboardItemsFound = tvNoDashboardItemsFound;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_logo_dashboard;
      ImageView ivLogoDashboard = ViewBindings.findChildViewById(rootView, id);
      if (ivLogoDashboard == null) {
        break missingId;
      }

      id = R.id.rv_dashboard_items;
      RecyclerView rvDashboardItems = ViewBindings.findChildViewById(rootView, id);
      if (rvDashboardItems == null) {
        break missingId;
      }

      id = R.id.tv_no_dashboard_items_found;
      TextView tvNoDashboardItemsFound = ViewBindings.findChildViewById(rootView, id);
      if (tvNoDashboardItemsFound == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ConstraintLayout) rootView, ivLogoDashboard,
          rvDashboardItems, tvNoDashboardItemsFound);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
