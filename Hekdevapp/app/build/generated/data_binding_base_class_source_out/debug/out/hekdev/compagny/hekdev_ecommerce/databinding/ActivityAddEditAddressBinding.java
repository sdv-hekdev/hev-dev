// Generated by view binder compiler. Do not edit!
package hekdev.compagny.hekdev_ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import hekdev.compagny.hekdev_ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEditAddressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSubmitAddress;

  @NonNull
  public final EditText etAdditionalNote;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etFullName;

  @NonNull
  public final EditText etOtherDetails;

  @NonNull
  public final EditText etPhoneNumber;

  @NonNull
  public final EditText etZipCode;

  @NonNull
  public final RadioButton rbHome;

  @NonNull
  public final RadioButton rbOffice;

  @NonNull
  public final RadioButton rbOther;

  @NonNull
  public final RadioGroup rgType;

  @NonNull
  public final TextInputLayout tilAdditionalNote;

  @NonNull
  public final TextInputLayout tilAddress;

  @NonNull
  public final TextInputLayout tilFullName;

  @NonNull
  public final TextInputLayout tilOtherDetails;

  @NonNull
  public final TextInputLayout tilPhoneNumber;

  @NonNull
  public final TextInputLayout tilZipCode;

  @NonNull
  public final Toolbar toolbarAddEditAddressActivity;

  @NonNull
  public final TextView tvTitle;

  private ActivityAddEditAddressBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnSubmitAddress, @NonNull EditText etAdditionalNote,
      @NonNull EditText etAddress, @NonNull EditText etFullName, @NonNull EditText etOtherDetails,
      @NonNull EditText etPhoneNumber, @NonNull EditText etZipCode, @NonNull RadioButton rbHome,
      @NonNull RadioButton rbOffice, @NonNull RadioButton rbOther, @NonNull RadioGroup rgType,
      @NonNull TextInputLayout tilAdditionalNote, @NonNull TextInputLayout tilAddress,
      @NonNull TextInputLayout tilFullName, @NonNull TextInputLayout tilOtherDetails,
      @NonNull TextInputLayout tilPhoneNumber, @NonNull TextInputLayout tilZipCode,
      @NonNull Toolbar toolbarAddEditAddressActivity, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnSubmitAddress = btnSubmitAddress;
    this.etAdditionalNote = etAdditionalNote;
    this.etAddress = etAddress;
    this.etFullName = etFullName;
    this.etOtherDetails = etOtherDetails;
    this.etPhoneNumber = etPhoneNumber;
    this.etZipCode = etZipCode;
    this.rbHome = rbHome;
    this.rbOffice = rbOffice;
    this.rbOther = rbOther;
    this.rgType = rgType;
    this.tilAdditionalNote = tilAdditionalNote;
    this.tilAddress = tilAddress;
    this.tilFullName = tilFullName;
    this.tilOtherDetails = tilOtherDetails;
    this.tilPhoneNumber = tilPhoneNumber;
    this.tilZipCode = tilZipCode;
    this.toolbarAddEditAddressActivity = toolbarAddEditAddressActivity;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEditAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEditAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_edit_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEditAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_submit_address;
      Button btnSubmitAddress = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitAddress == null) {
        break missingId;
      }

      id = R.id.et_additional_note;
      EditText etAdditionalNote = ViewBindings.findChildViewById(rootView, id);
      if (etAdditionalNote == null) {
        break missingId;
      }

      id = R.id.et_address;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.et_full_name;
      EditText etFullName = ViewBindings.findChildViewById(rootView, id);
      if (etFullName == null) {
        break missingId;
      }

      id = R.id.et_other_details;
      EditText etOtherDetails = ViewBindings.findChildViewById(rootView, id);
      if (etOtherDetails == null) {
        break missingId;
      }

      id = R.id.et_phone_number;
      EditText etPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (etPhoneNumber == null) {
        break missingId;
      }

      id = R.id.et_zip_code;
      EditText etZipCode = ViewBindings.findChildViewById(rootView, id);
      if (etZipCode == null) {
        break missingId;
      }

      id = R.id.rb_home;
      RadioButton rbHome = ViewBindings.findChildViewById(rootView, id);
      if (rbHome == null) {
        break missingId;
      }

      id = R.id.rb_office;
      RadioButton rbOffice = ViewBindings.findChildViewById(rootView, id);
      if (rbOffice == null) {
        break missingId;
      }

      id = R.id.rb_other;
      RadioButton rbOther = ViewBindings.findChildViewById(rootView, id);
      if (rbOther == null) {
        break missingId;
      }

      id = R.id.rg_type;
      RadioGroup rgType = ViewBindings.findChildViewById(rootView, id);
      if (rgType == null) {
        break missingId;
      }

      id = R.id.til_additional_note;
      TextInputLayout tilAdditionalNote = ViewBindings.findChildViewById(rootView, id);
      if (tilAdditionalNote == null) {
        break missingId;
      }

      id = R.id.til_address;
      TextInputLayout tilAddress = ViewBindings.findChildViewById(rootView, id);
      if (tilAddress == null) {
        break missingId;
      }

      id = R.id.til_full_name;
      TextInputLayout tilFullName = ViewBindings.findChildViewById(rootView, id);
      if (tilFullName == null) {
        break missingId;
      }

      id = R.id.til_other_details;
      TextInputLayout tilOtherDetails = ViewBindings.findChildViewById(rootView, id);
      if (tilOtherDetails == null) {
        break missingId;
      }

      id = R.id.til_phone_number;
      TextInputLayout tilPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tilPhoneNumber == null) {
        break missingId;
      }

      id = R.id.til_zip_code;
      TextInputLayout tilZipCode = ViewBindings.findChildViewById(rootView, id);
      if (tilZipCode == null) {
        break missingId;
      }

      id = R.id.toolbar_add_edit_address_activity;
      Toolbar toolbarAddEditAddressActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddEditAddressActivity == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityAddEditAddressBinding((ConstraintLayout) rootView, btnSubmitAddress,
          etAdditionalNote, etAddress, etFullName, etOtherDetails, etPhoneNumber, etZipCode, rbHome,
          rbOffice, rbOther, rgType, tilAdditionalNote, tilAddress, tilFullName, tilOtherDetails,
          tilPhoneNumber, tilZipCode, toolbarAddEditAddressActivity, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
